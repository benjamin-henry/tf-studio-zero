const default_ops_params = {
    "Convolutional" : {
        "tf.layers.conv1d" : {
            filters: 32,
            kernelSize: 3,
            strides: 1,
            padding:"same",
            dataFormat:"channelsLast",
            dilationRate: 1,
            activation:"linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:"",
            trainable:true
        },
        "tf.layers.conv2d" : {
            filters: 32,
            kernelSize: 3,
            strides: 1,
            padding:"same",
            dataFormat:"channelsLast",
            dilationRate: 1,
            activation:"linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:null,
            trainable:true
        },
        "tf.layers.conv3d" : {
            filters: 32,
            kernelSize: 3,
            strides: 1,
            padding:"same",
            dataFormat:"channelsLast",
            dilationRate: 1,
            activation:"linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:"",
            trainable:true
        },
        "tf.layers.conv2dTranspose" : {
            filters: 32,
            kernelSize: 3,
            strides: 1,
            padding:"same",
            dataFormat:"channelsLast",
            dilationRate: 1,
            activation:"linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:"",
            trainable:true
        },
        "tf.layers.depthwiseConv2d" : {
            filters: 32,
            kernelSize: 3,
            depthMultiplier: 3,
            depthwiseInitialiser:null,
            depthwiseRegularizer:null, 
            strides: 1,
            padding:"same",
            dataFormat:"channelsLast",
            dilationRate: 1,
            activation:"linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:"",
            trainable:true
        },
        "tf.layers.separableConv2d" : {
            filters: 32,
            kernelSize: 3,
            depthMultiplier: 3,
            depthwiseInitialiser:null,
            depthwiseRegularizer:null, 
            strides: 1,
            padding:"same",
            dataFormat:"channelsLast",
            dilationRate: 1,
            activation:"linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:"",
            trainable:true
        },
    },
    "Basic": {
        "tf.layers.activation": {
            activation: 'linear',
            inputShape: null
        },
        "tf.layers.dense": {
            units: 32,
            activation: "linear",
            useBias:true,
            kernelRegularizer:null,
            kernelConstraint :null,
            biasRegularizer:null,
            biasConstraint :null,
            activityRegularizer:null,
            inputShape:null,
            dtype:"float32",
            name:"",
            trainable:true,
        },
        "tf.layers.dropout": {
            rate:.25,
            noiseShape: null,
            seed: null
        },
        "tf.layers.embedding": {
            inputDim: 1000,
            outputDim: 128,
            embeddingsInitializer: null,
            embeddingsRegularizer:null,
            embeddingConstraint:null,
            maskZero:null,
            inputLength:null
        },
        "tf.layers.flatten": {
            inputShape:null,
            batchInputShape:null,
            batchSize :null,
            dtype :null,
            name:null,
            trainable:null,
            updatable :null,
            weights:null,
            inputDType :null,
        },
        "tf.layers.permute": {
            dims:null,
            inputShape:null, 
            batchInputShape :null, 
            batchSize :null,
            dtype :null,
            name :null,
            trainable :null,
            weights :null,
            inputDType :null,
        },
        "tf.layers.repeatvector": {
            n: 2,
            inputShape :null,
            batchInputShape :null,
            batchSize :null,
            dtype :null,
            name :null,
            trainable :null,
            weights :null,
            inputDType :null,

        },
        "tf.layers.reshape": {
            targetShape  :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,

        },
        "tf.layers.spatialdropout1d": {
            rate :.25,
            seed :null,
            input_shape :null,
            batch_input_shape :null,
            batch_size:null,
            dtype :null,
            name :null,
            trainable :null,
            input_dtype :null,

        },
    },
    "Inputs": {
        "tf.layers.inputLayer": {
            inputShape: [28,28,3],
            dtype: 'float32'
        },
        "tf.input": {
            shape: [28,28,3],
            dtype: "float32"
        }
    },
    "Advanced Activation": {     
        "tf.layers.elu" : {
            alpha :1.,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.leakyReLU" : {
            alpha :1.,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.prelu" : {
            alphaInitializer :null,
            alphaRegularizer:null,
            alphaConstraint :null,
            sharedAxes :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.reLU" : {
            maxValue : 1.,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.softmax" : {
            axis :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.thresholdedReLU" : {
            theta: 0.,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
    },
    "Merge" : {
        "tf.layers.add" : {
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.average" : {
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.concatenate" : {
            axis: null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.dot" : {
            axes: null,
            normalisze:null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.maximum" : {
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.minimum" : {
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.multiply" : {
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
    },
    "Normalization": {
        "tf.layers.batchNormalization": {
            axis: -1,
            momemtum:.99,
            epsilon:.003,
            center:true,
            scale:true,
            betaInitializer:null,
            gammaInitializer:null,
            movingMeanInitializer:null,
            movingVarianceInitializer:null,
            betaConstraint :null,
            gammaConstraint:null,
            gammaRegularizer:null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.layerNormalization":{
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        }
    },
    "Pooling": {
        "tf.layers.averagePooling1d": {
            poolSize : 2,
            strides: 2,
            padding : "same",
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.averagePooling2d":{
            poolSize : 2,
            strides: 2,
            padding : "same",
            dataFormat :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.averagePooling3d":{
            poolSize : 2,
            strides: 2,
            padding : "same",
            dataFormat :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.globalAveragePooling1d":{
            dataFormat:null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.globalAveragePooling2d":{
            dataFormat:null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.globalMaxPooling1d":{
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.globalMaxPooling2d": {
            dataFormat:null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.maxPooling1d":{
            poolSize : 2,
            strides: 2,
            padding : "same",
            dataFormat :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.maxPooling2d":{
            poolSize : 2,
            strides: 2,
            padding : "same",
            dataFormat :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
        "tf.layers.maxPooling3d":{
            poolSize : 2,
            strides: 2,
            padding : "same",
            dataFormat :null,
            inputShape :null,
            batchInputShape  :null,
            batchSize  :null,
            dtype :null, 
            name :null,
            trainable  :null,
            weights :null,
            inputDType   :null,
        },
    }
}



const get_default_op_params = ({key, _key, op}) => {
    if (default_ops_params[_key][op] !== undefined)
        return Object.assign({},default_ops_params[_key][op])
    return {}
}

export {
    default_ops_params, get_default_op_params
}